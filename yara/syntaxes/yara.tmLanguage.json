{
  "fileTypes": [
    "yara",
    "yar"
  ],
  "name": "YARA",
  "scopeName": "source.yara",
  "patterns": [
    { "include": "#comment-multiline" },
    { "include": "#comment-single" },
    { "include": "#condition-bitwise" },
    { "include": "#condition-boolean" },
    { "include": "#condition-relational" },
    { "include": "#condition-terms" },
    { "include": "#constant-bool" },
    { "include": "#keyword-rule" },
    { "include": "#keyword-sections" },
    { "include": "#number-decimal" },
    { "include": "#number-hex" },
    { "include": "#storage-modifiers" },
    { "include": "#storage-types" },
    { "include": "#string-hex" },
    { "include": "#string-regexp" },
    { "include": "#string-text" },
    { "include": "#variable-identifiers" }
  ],
  "repository": {
    "comment-multiline": {
      "name": "comment.block.yara",
      "begin": "/\\*",
      "end": "\\*/"
    },
    "comment-single": {
      "name": "comment.line.double-slash.yara",
      "match": "//.*\\n"
    },
    "constant-bool": {
      "name": "constant.language.boolean.true.yara",
      "match": "(\\btrue\\b|\\bfalse\\b)"
    },
    "condition-bitwise": {
      "name": "keyword.operator.bitwise.yara",
      "match": "(\\&|\\||\\>\\>|\\<\\<|~|\\^)"
    },
    "condition-boolean": {
      "name": "keyword.operator.boolean.yara",
      "match": "\\b(and|not|or)\\b"
    },
    "condition-relational": {
      "name": "keyword.operator.relational.yara",
      "match": "(\\<=?|\\>=?|==|\\!=)"
    },
    "condition-terms": {
      "name": "keyword.other.yara",
      "match": "\\b(all|any|at|condition|contains|icontains|startswith|istartswith|endswith|iendswith|filesize|for|import|in|include|matches|none|of|them)\\b"
    },
    "keyword-sections": {
      "name": "keyword.other.sections.yara",
      "end": ":",
      "match": "\\b(meta|strings|condition)\\b"
    },
    "keyword-rule": {
      "name": "keyword.other.rule.yara",
      "match": "\\brule\\b"
    },
    "number-decimal": {
      "name": "constant.numeric.decimal.yara",
      "match": "\\b[0-9]+(MB|KB)?\\b"
    },
    "number-hex": {
      "name": "constant.numeric.hex.yara",
      "match": "\\b0x[a-fA-F0-9]+\\b"
    },
    "storage-modifiers": {
      "name": "storage.modifier.yara",
      "match": "(\\bbase64\\b|\\bbase64wide\\b|\\bfullword\\b|\\bglobal\\b|\\bnocase\\b|\\bprivate\\b|\\bwide\\b|\\bxor\\b)"
    },
    "storage-types": {
      "name": "storage.type.yara",
      "patterns": [
        {
          "name": "storage.type.other.yara",
          "match": "(\\bascii\\b|\\bentrypoint\\b)"
        },
        {
          "name": "storage.type.int.yara",
          "match": "(\\bint8\\b|\\bint16\\b|\\bint32\\b)"
        },
        {
          "name": "storage.type.intbe.yara",
          "match": "(\\bint8be\\b|\\bint16be\\b|\\bint32be\\b)"
        },
        {
          "name": "storage.type.uint.yara",
          "match": "(\\buint8\\b|\\buint16\\b|\\buint32\\b)"
        },
        {
          "name": "storage.type.uintbe.yara",
          "match": "(\\buint8be\\b|\\buint16be\\b|\\buint32be\\b)"
        }
      ]
    },
    "string-hex": {
      "contentName": "entity.name.hex.yara",
      "begin": "=\\s*?{",
      "end": "}",
      "patterns": [
        {
          "include": "#comment-single"
        },
        {
          "include": "#comment-multiline"
        },
        {
          "name": "entity.name.jump.hex.yara",
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            {
              "name": "constant.numeric.jump.hex.yara",
              "match": "[0-9]"
            },
            {
              "name": "entity.other.dash.jump.hex.yara",
              "match": "\\-"
            },
            {
              "name": "invalid.illegal.jump.yara",
              "match": "."
            }
          ]
        },
        {
          "name": "string.other.hex.yara",
          "match": "[a-fA-F0-9]"
        },
        {
          "name": "constant.other.placeholder.hex.yara",
          "match": "\\?"
        },
        {
          "name": "entity.other.special.hex.yara",
          "match": "[\\[\\]\\(\\)\\s|]"
        },
        {
          "name": "invalid.illegal.hex.yara",
          "match": "[^\\[\\]\\s]"
        }
      ]
    },
    "string-regexp": {
      "name": "string.regexp.yara",
      "match": "/.*?[^\\\\]/(i|c|x|t|s|m|p|w|n|J|U|d|b|e|q|x)*"
    },
    "string-text": {
      "name": "string.quoted.double.yara",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.yara",
          "match": "\\\\[\"\\\\nrt]"
        },
        {
          "name": "string.quoted.double.hex.yara",
          "match": "\\\\x[a-fA-F0-9]{2}"
        },
        {
          "name": "invalid.illegal.missing.escape.yara",
          "match": "\\\\."
        }
      ]
    },
    "variable-identifiers": {
      "name": "variable.parameter.source.yara",
      "match": "(\\$|\\#|\\@)[a-zA-Z0-9_]*"
    }
  },
  "smartTypingPairs": [
    [ "\"", "\"" ],
    [ "(", ")" ],
    [ "{", "}" ],
    [ "[", "]" ],
    [ "/*", "*/" ]
  ],
  "highlightPairs": [
    [ "\"", "\"" ],
    [ "(", ")" ],
    [ "{", "}" ],
    [ "[", "]" ],
    [ "/*", "*/" ]
  ]
}